// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © VanHe1sing

//@version=5
indicator("Heat Map Seasons", shorttitle = "HeatMapS", overlay =  true)

// ————— User Inputs 
int Length         = input.int(200, "Length")
int heat_sensative = input.int(70, "Heat Sensitivity", step = 10)
bool show_line     = input.bool(true, "Show Regression Line?")


// ————— Normalization Function
normalization(src, mean)=> 
    norm = (src - mean) / ta.stdev(src, 200)
    norm > 5 ? 5 : norm < -5 ? -5 : norm

// ————— Rescale Function (when range is known).
rescale(_src, _oldMin, _oldMax, _newMin, _newMax) =>
    _newMin + (_newMax - _newMin) * (_src - _oldMin) / math.max(_oldMax - _oldMin, 10e-10)

// ————— Regression Line Formula
Regression_Line(length)=>
    x  = bar_index
    y  = hl2
    x_ = ta.sma(x,length)
    y_ = ta.sma(y,length)
    mx = ta.stdev(x,length)
    my = ta.stdev(y,length)
    c  = ta.correlation(x,y,length)
    // -
    slope = c * (my/mx)
    inter = y_ - slope*x_
    // -
    x*slope + inter

Regression_Line = Regression_Line(Length)

// ————— Heat Map Color Bars
color_level = normalization(close - Regression_Line, 0)

color = color_level > 0 
 ? color.from_gradient(color_level, 0, ta.highest(color_level, heat_sensative), color.yellow, color.red)
 : color.from_gradient(color_level, ta.lowest(color_level, heat_sensative), 0, color.aqua, color.yellow)
barcolor(color)

// Plot of Regression_Line
plot(show_line ? Regression_Line : na, color = color.rgb(120, 123, 134, 60), linewidth = 1
 , style = plot.style_stepline_diamond)


// ————— Plot Gauge 
tbl = table.new(position.bottom_center, 100, 10)

for i = 0 to 29 by 1
    table.cell(tbl, i, 1, "",
     bgcolor = i < 15 
      ? color.from_gradient(i, 0, 15, color.aqua, color.yellow) 
         : color.from_gradient(i, 15, 30, color.yellow, color.red)
          )

// Gauge point 
g_p = rescale(color_level, -4, 5, 0, 30)

// Summer Winter marks and gauge point
table.cell(tbl, 0, 1, "❆", text_color = color.rgb(32, 91, 255), text_size = size.large, bgcolor = color.aqua)
table.cell(tbl, 29, 1, "☀︎", text_color = color.rgb(255, 238, 0), text_size = size.large, bgcolor = color.red)

table.cell(tbl, math.round(g_p < 0 ? 0 : g_p), 1, "𖦹", text_color = color.rgb(0, 0, 0), text_size = size.large
 , bgcolor = color)

table.cell(tbl, 35, 0,
 "☀︎ - Summer\n❆ - Winter\n𖦹 - Current Season\n " + "     Value: " + str.tostring(math.round(g_p < 0 ? 0 : g_p)-15),
  text_halign = text.align_left,
   text_color = color.gray
   )


// ❅ ❆ ❃ ❊ ❉ ☀︎ 𖦹